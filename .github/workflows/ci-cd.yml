name: QR Backend CI/CD and Upload QR Codes

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    steps:
      # Étape 1 : Récupérer le code
      - name: Checkout code
        uses: actions/checkout@v3

      # Étape 2 : Configurer Python
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.13.1

      # Étape 3 : Installer les dépendances
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      # Étape 4 : Exécuter les tests
      - name: Run tests
        run: |
          pytest test_main.py --maxfail=1 --disable-warnings -q  # Spécifiez le fichier de test

      # Étape 5 : Construire l'application (si les tests passent)
      - name: Run the application
        run: |
          uvicorn main:app --reload & sleep 10  # Lancer temporairement pour valider

      # Étape 6 : Vérifier les QR Codes générés
      - name: Check generated QR codes
        run: |
          ls -l qr_codes/

  upload-qr-code:
    runs-on: ubuntu-latest
    needs: test-and-build # This job will run only after the test-and-build job completes

    steps:
      # Étape 1 : Récupérer le code
      - name: Checkout code
        uses: actions/checkout@v3

      # Étape 2 : Set up GitHub token (this is necessary for uploading the files to GitHub)
      - name: Set up GitHub Token
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        run: |
          echo "GITHUB_TOKEN=${{ secrets.MY_GITHUB_TOKEN }}" >> $GITHUB_ENV

      # Étape 3 : Uploader les QR codes sur GitHub
      - name: Upload QR codes to GitHub
        run: |
          echo "Deploying QR codes..."

          # Loop through all QR code images in the `qr_codes/` directory
          for qr_code in qr_codes/*.png; do
            file_name=$(basename "$qr_code")
            base64_image=$(base64 "$qr_code" | tr -d '\n')
            
            # GitHub API request to upload the QR code to the repository
            curl -X PUT \
              -H "Authorization: token $GITHUB_TOKEN" \
              -d "{\"message\":\"Add QR code for $file_name\",\"content\":\"$base64_image\",\"branch\":\"main\"}" \
              "https://api.github.com/repos/${{ secrets.REPO_OWNER }}/QR-Backend/contents/qr_codes/$file_name"
          done

      # Optionally, you can print the status of the uploaded QR codes
      - name: Verify upload status
        run: |
          echo "QR Codes uploaded successfully."
